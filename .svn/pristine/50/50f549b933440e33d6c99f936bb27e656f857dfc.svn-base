-- | Este módulo define funções comuns da Tarefa 6 do trabalho prático.
module Tarefa6_2018li1g027 where

import LI11819
import Tarefa3_2018li1g027
import Tarefa2_2018li1g027
import Tarefa1_2018li1g027
import Tarefa4_2018li1g027
-- * Funções principais da Tarefa 6.

-- | Define um ro'bot' capaz de jogar autonomamente o jogo.
bot :: Int          -- ^ O identificador do 'Jogador' associado ao ro'bot'.
    -> Estado       -- ^ O 'Estado' para o qual o ro'bot' deve tomar uma decisão.
    -> Maybe Jogada -- ^ Uma possível 'Jogada' a efetuar pelo ro'bot'.
bot ind e = verificaDisparoLaser e ind 

verificaDisparoLaser :: Estado -> Int -> Maybe Jogada
verificaDisparoLaser e ind = if verificaSeAtingido pos posAfetadas then Just (Movimenta D) else Nothing
    where
        listJog  = jogadoresEstado e 
        (Jogador pos dir v l c) = listJog !! ind
        allPos                  = [(l,c) | l <- [0 .. pred . length . mapaEstado $ e], c <- [0 .. pred . length . head . mapaEstado $ e]]
        allPosGroup             = groupN allPos $ length . head . mapaEstado $ e
        (allI, allD)            = (posIndestrutivel (mapaEstado e) allPosGroup, posDestrutivel (mapaEstado e) allPosGroup)
        posAfetadas             = vdisparoLaseraux allI e 

verificaSeAtingido :: Posicao -> [[Posicao]] -> Bool
verificaSeAtingido pos l = foldr (||) False (aux pos l)
    where
        aux :: Posicao -> [[Posicao]] -> [Bool]
        aux pos [] = []
        aux pos (h:t) = (pos `elem` h) :  aux pos t 

vdisparoLaseraux :: [Posicao] -> Estado -> [[PosicaoGrelha]]
vdisparoLaseraux allI e = if null allLaser then [] else aux allLaser allI 
    where
        listJog  = jogadoresEstado e 
        allLaser = filter (\e -> case e of {DisparoLaser{} -> True; _ -> False}) $ disparosEstado e
        aux :: [Disparo] -> [Posicao] -> [[PosicaoGrelha]]
        aux [] _ = []
        aux allLaser allI = [laserPath ((posicaoDisparo . head $ allLaser),direcaoDisparo . head $ allLaser) allI] ++ aux (tail allLaser) allI

            
   

